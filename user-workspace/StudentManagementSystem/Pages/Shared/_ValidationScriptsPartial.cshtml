<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>

<script>
    // Custom validation methods
    $.validator.addMethod('requiredif', function (value, element, parameters) {
        var id = '#' + parameters['dependentproperty'];
        var targetValue = parameters['targetvalue'];
        targetValue = (targetValue == null ? '' : targetValue).toString();
        var actualValue = $(id).val();
        actualValue = (actualValue == null ? '' : actualValue).toString();
        var isRequired = targetValue === actualValue;
        var isValid = !isRequired || (isRequired && value !== null && value.toString().trim() !== '');
        return isValid;
    });

    $.validator.unobtrusive.adapters.add('requiredif', ['dependentproperty', 'targetvalue'], function (options) {
        options.rules['requiredif'] = {
            dependentproperty: options.params['dependentproperty'],
            targetvalue: options.params['targetvalue']
        };
        options.messages['requiredif'] = options.message;
    });

    // Custom error styling
    $.validator.setDefaults({
        highlight: function (element) {
            $(element)
                .addClass('is-invalid')
                .removeClass('is-valid');
        },
        unhighlight: function (element) {
            $(element)
                .addClass('is-valid')
                .removeClass('is-invalid');
        },
        errorElement: 'div',
        errorClass: 'invalid-feedback',
        errorPlacement: function (error, element) {
            if (element.parent('.input-group').length) {
                error.insertAfter(element.parent());
            } else if (element.prop('type') === 'checkbox' || element.prop('type') === 'radio') {
                error.appendTo(element.closest('.form-check').parent());
            } else {
                error.insertAfter(element);
            }
        }
    });

    // Additional validation methods
    $.validator.addMethod('dategreaterorthan', function (value, element, params) {
        if (!value || !params) return true;

        var startDate = $(params).val();
        if (!startDate) return true;

        return new Date(value) >= new Date(startDate);
    });

    $.validator.addMethod('maxfilesize', function (value, element, params) {
        if (!element.files || !element.files[0]) return true;
        return element.files[0].size <= params;
    });

    $.validator.addMethod('allowedextensions', function (value, element, params) {
        if (!element.files || !element.files[0]) return true;
        var extension = value.toLowerCase().split('.').pop();
        return params.indexOf(extension) !== -1;
    });

    // Real-time validation
    $('form').on('keyup blur change', 'input, select, textarea', function () {
        $(this).valid();
    });

    // Prevent form submission if invalid
    $('form').on('submit', function (e) {
        if (!$(this).valid()) {
            e.preventDefault();
            // Scroll to first error
            var firstError = $('.is-invalid').first();
            if (firstError.length) {
                $('html, body').animate({
                    scrollTop: firstError.offset().top - 100
                }, 200);
            }
        }
    });
</script>
